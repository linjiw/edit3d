import cv2
import numpy as np
def remove_white_border(image):
    # Convert the image to grayscale
    gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

    # Threshold the grayscale image to create a binary mask of the white background
    _, mask = cv2.threshold(gray, 0, 200, cv2.THRESH_BINARY)

    # Find the contours in the binary mask
    contours, _ = cv2.findContours(mask, cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)

    # Find the largest contour, which should correspond to the white background
    max_contour = max(contours, key=cv2.contourArea)

    # Compute the bounding rectangle of the largest contour
    x, y, w, h = cv2.boundingRect(max_contour)

    # Crop the image to remove the surrounding white border
    cropped_image = image[y:y+h, x:x+w]

    # Return the adjusted parameters
    return cropped_image, x, y, w, h

f_name = "origin_13_16.png"
image = cv2.imread(f_name)
results, x, y, w, h = remove_white_border(image)
print(f"x, y, w, h {[x, y, w, h]}")
cv2.imwrite(f'remove_white_border_{f_name}', results)

# Show the result
cv2.imshow('Result', image)
cv2.waitKey(0)
cv2.destroyAllWindows()
